{"version":3,"file":"js/893.f50f6de5.js","mappings":"u0CA6GM,MAAEA,EAAF,gBAASC,IAAoBC,EAAAA,EAAAA,KAI7BC,EAAO,gBAAeC,EAAMC,KAC5BC,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,EAAAA,IAAI,IAEXC,EAAWC,IACfH,EAAKI,MAAQD,EAAIE,MAGbC,EAAWC,MACfC,GACEC,QACFC,EAAS,cACTC,EAAO,MAEPnB,EAAMgB,EAAQb,EAAKgB,EAAMD,GAAQE,MAAMT,GAAQM,EAAKN,MAGtDG,EAAS,MAAO,CAAEG,KAAMP,IACxB,MAAMW,EAAaC,aACjB,IAAMR,EAAS,MAAO,CAAEG,KAAMP,GAAW,KACzC,MAGFa,EAAAA,EAAAA,KAAgB,KACdC,cAAcH,MAGhB,MAAMI,EAAa,KACjBxB,EAAgB,SAAUE,EAAKC,EAAMsB,WAAY,eAAeN,MAC7DT,IACCgB,EAAK,oBAAqBhB,EAAIE,KAAKa,YACnCC,EAAK,eAAgBhB,EAAIE,KAAKe,OAC9BJ,cAAcH,OAMdQ,IADQpB,EAAAA,EAAAA,IAAI,OACCA,EAAAA,EAAAA,IAAI,OACjBqB,EAAQ,KACZ9B,EACE,QACC,gBAAeI,EAAMC,KACtB,CAAE0B,QAASvB,EAAKI,MAAMmB,SACrB,GAAE3B,EAAMC,eAGP2B,GAAaC,EAAAA,EAAAA,IAAMC,EAAAA,EAAQ,KAAI9B,EAAMC,c,ysDC7J3C,MAAM8B,EAAc,EAEpB,Q,8aCuDA,MAAM,gBAAElC,IAAoBC,EAAAA,EAAAA,KACtBkC,GAAS3B,EAAAA,EAAAA,IAAI,CAAE4B,KAAM,EAAGC,MAAO,IAC/BV,GAAQnB,EAAAA,EAAAA,IAAI,IACZiB,GAAajB,EAAAA,EAAAA,IAAI,IACjBC,EAAU,CAAC6B,EAAM,MACrBtC,EACE,MACA,eACAuC,OAAOC,OAAO,GAAIL,EAAOxB,MAAO2B,IAChCnB,MAAMT,IACNiB,EAAMhB,MAAQD,EAAIE,KAAKe,MACvBF,EAAWd,MAAQD,EAAIE,KAAKa,e,OAGhCgB,EAAAA,EAAAA,KACE,IAAMN,EAAOxB,QACb,IAAMF,KACN,CAAEiC,MAAM,IAEVjC,I,grCC1EA,MAAM,EAAc,EAEpB","sources":["webpack://client/./src/components/admin/products/ListItem.vue","webpack://client/./src/components/admin/products/ListItem.vue?26e8","webpack://client/./src/components/admin/products/ListPage.vue","webpack://client/./src/components/admin/products/ListPage.vue?d3c4"],"sourcesContent":["<template>\r\n  <li\r\n    class=\"data-base__item\"\r\n    :class=\"{\r\n      'spinner-small': store.isItemLoading || isUpdating,\r\n      'loading-error': store.isItemLoadingFailed\r\n    }\"\r\n  >\r\n    <div class=\"data-base__product admin-product\">\r\n      <h3 class=\"data-base__name\">{{ item.name }}</h3>\r\n\r\n      <span class=\"data-base__created\"\r\n        >Создан: {{ editors.editDate(item.created) }}</span\r\n      >\r\n      <span class=\"data-base__changed\"\r\n        >Изменен: {{ editors.editDate(item.changed) }}</span\r\n      >\r\n      <router-link\r\n        class=\"data-base__change-button\"\r\n        :to=\"{ name: 'adminChangeProduct', params: { id } }\"\r\n        >Изменить</router-link\r\n      >\r\n\r\n      <ul class=\"data-base__volume volume-block\">\r\n        <li class=\"volume-block__item\">\r\n          <div class=\"volume-block__body\">\r\n            <span class=\"volume-block__header\">Объем/вес</span\r\n            ><span class=\"volume-block__header\">Цена</span\r\n            ><span class=\"volume-block__header\">До скидки</span\r\n            ><span class=\"volume-block__header\">Кол-во</span>\r\n          </div>\r\n        </li>\r\n\r\n        <li\r\n          v-for=\"volume in item.volumes\"\r\n          :key=\"volume.id\"\r\n          class=\"volume-block__item\"\r\n        >\r\n          <div\r\n            class=\"volume-block__body\"\r\n            :class=\"{\r\n              'volume-block__body--three-items': !volume.subprice\r\n            }\"\r\n          >\r\n            <span class=\"volume-block__volume\">{{\r\n              editors.editVolumeFormat(volume.volume)\r\n            }}</span>\r\n            <div class=\"volume-block__price price\">\r\n              <input\r\n                ref=\"priceInput\"\r\n                @input=\"patch\"\r\n                type=\"text\"\r\n                class=\"price__input\"\r\n                v-model.number=\"volume.price\"\r\n              />\r\n              <span class=\"price__currency\">₽</span>\r\n            </div>\r\n            <div class=\"volume-block__ceil ciel\">\r\n              <input\r\n                ref=\"priceInput\"\r\n                @input=\"patch\"\r\n                type=\"text\"\r\n                class=\"ceil__input\"\r\n                v-model.number=\"volume.subprice\"\r\n              />\r\n              <span v-if=\"volume.subprice\" class=\"ceil__currency\">₽</span>\r\n            </div>\r\n            <div class=\"volume-block__quantity quantity\">\r\n              <input\r\n                @input=\"patch\"\r\n                type=\"text\"\r\n                class=\"quantity__input\"\r\n                v-model.number=\"volume.quantity\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <button\r\n        class=\"data-base__button-del button-del\"\r\n        type=\"button\"\r\n        aria-label=\"Удалить товар\"\r\n        @click.prevent=\"deleteItem\"\r\n      >\r\n        <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n          <path\r\n            d=\"M17 1L1 17m16 0L1 1\"\r\n            stroke=\"#9D9D9D\"\r\n            stroke-width=\".8\"\r\n          ></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </li>\r\n</template>\r\n<script setup>\r\n/* eslint-disable */\r\n\r\nimport {\r\n  defineProps,\r\n  defineEmits,\r\n  ref,\r\n  toRef,\r\n  watch,\r\n  onBeforeUnmount\r\n} from 'vue'\r\nimport useEditors from '@/hooks/useEditors'\r\nimport useApi from '@/hooks/useApi'\r\nimport { store } from '@/store/store'\r\nconst { fetch, fetchWithParams } = useApi()\r\n\r\nconst props = defineProps(['id', 'pagination'])\r\nconst emit = defineEmits(['update:items', 'update:pagination'])\r\nconst url = `api/products/${props.id}`\r\nconst editors = useEditors()\r\nconst item = ref({})\r\n\r\nconst getData = (res) => {\r\n  item.value = res.data\r\n}\r\n\r\nconst useFetch = async (\r\n  method,\r\n  { func },\r\n  string = 'ItemLoading',\r\n  body = {}\r\n) => {\r\n  fetch(method, url, body, string).then((res) => func(res))\r\n}\r\n\r\nuseFetch('get', { func: getData })\r\nconst intervalId = setInterval(\r\n  () => useFetch('get', { func: getData }, ''),\r\n  1000\r\n)\r\n\r\nonBeforeUnmount(() => {\r\n  clearInterval(intervalId)\r\n})\r\n\r\nconst deleteItem = () => {\r\n  fetchWithParams('delete', url, props.pagination, 'ItemLoading').then(\r\n    (res) => {\r\n      emit('update:pagination', res.data.pagination)\r\n      emit('update:items', res.data.items)\r\n      clearInterval(intervalId)\r\n    }\r\n  )\r\n}\r\n\r\nconst input = ref(null)\r\nconst priceInput = ref(null)\r\nconst patch = () => {\r\n  fetch(\r\n    'patch',\r\n    `api/products/${props.id}`,\r\n    { volumes: item.value.volumes },\r\n    `${props.id}Updating`\r\n  )\r\n}\r\nconst isUpdating = toRef(store, `is${props.id}Updating`)\r\n</script>\r\n","import script from \"./ListItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ListItem.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"content__top\">\r\n    <ul class=\"breadcrumbs\">\r\n      <li class=\"breadcrumbs__item\">\r\n        <router-link :to=\"{ name: 'adminMenu' }\" class=\"breadcrumbs__link\">\r\n          Меню\r\n        </router-link>\r\n      </li>\r\n\r\n      <li class=\"breadcrumbs__item\">\r\n        <span class=\"breadcrumbs__link\" disabled> Товары </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"content__catalog data-base\">\r\n    <div class=\"settings\">\r\n      <BaseFilter @submit=\"getData()\" v-model:settings=\"config\"></BaseFilter>\r\n    </div>\r\n\r\n    <section class=\"catalog\">\r\n      <router-link\r\n        :to=\"{ name: 'adminAddProduct' }\"\r\n        class=\"data-base__button-add\"\r\n        >Добавить</router-link\r\n      >\r\n      <BaseSpinner v-if=\"store.isLoading\"></BaseSpinner>\r\n      <p\r\n        class=\"data-base__empty-message\"\r\n        v-if=\"items.length === 0 && !store.isLoading\"\r\n      >\r\n        Список пуст\r\n      </p>\r\n\r\n      <ul class=\"data-base__list\">\r\n        <ListItem\r\n          v-for=\"item in items\"\r\n          :key=\"item.id\"\r\n          :id=\"item.id\"\r\n          v-model:items=\"items\"\r\n          v-model:pagination=\"pagination\"\r\n        ></ListItem>\r\n      </ul>\r\n      <PaginationBase\r\n        v-if=\"pagination.pages > 1\"\r\n        class=\"catalog__pagination\"\r\n        v-model:config=\"config\"\r\n        :pagination=\"pagination\"\r\n      />\r\n    </section>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport BaseFilter from '@/components/BaseFilter.vue'\r\nimport BaseSpinner from '@/components/small/BaseSpinner.vue'\r\nimport { watch, ref } from 'vue'\r\nimport useApi from '@/hooks/useApi'\r\nimport { store } from '@/store/store'\r\nimport PaginationBase from '@/components/small/PaginationBase.vue'\r\nimport ListItem from '@/components/admin/products/ListItem.vue'\r\nconst { fetchWithParams } = useApi()\r\nconst config = ref({ page: 1, limit: 6 })\r\nconst items = ref([])\r\nconst pagination = ref({})\r\nconst getData = (obj = {}) => {\r\n  fetchWithParams(\r\n    'get',\r\n    'api/products',\r\n    Object.assign({}, config.value, obj)\r\n  ).then((res) => {\r\n    items.value = res.data.items\r\n    pagination.value = res.data.pagination\r\n  })\r\n}\r\nwatch(\r\n  () => config.value,\r\n  () => getData(),\r\n  { deep: true }\r\n)\r\ngetData()\r\n// const intervalId = setInterval(() => {\r\n//   fetchWithParams('get', 'api/products', config.value, '').then((res) => {\r\n//     items.value = res.data.items\r\n//     pagination.value = res.data.pagination\r\n//   })\r\n// }, 100)\r\n// onBeforeUnmount(() => clearInterval(intervalId))\r\n</script>\r\n<style lang=\"scss\">\r\n@import '@/styles/data.scss';\r\n\r\n@import '@/styles/style.scss';\r\n</style>\r\n","import script from \"./ListPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ListPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ListPage.vue?vue&type=style&index=0&id=17dbd9cc&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["fetch","fetchWithParams","useApi","url","props","id","editors","useEditors","item","ref","getData","res","value","data","useFetch","async","method","func","string","body","then","intervalId","setInterval","onBeforeUnmount","clearInterval","deleteItem","pagination","emit","items","priceInput","patch","volumes","isUpdating","toRef","store","__exports__","config","page","limit","obj","Object","assign","watch","deep"],"sourceRoot":""}