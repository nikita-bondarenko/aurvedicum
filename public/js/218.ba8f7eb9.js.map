{"version":3,"file":"js/218.ba8f7eb9.js","mappings":"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","sources":["webpack://client/./src/components/form/FormField.vue","webpack://client/./src/components/form/FormField.vue?0bba","webpack://client/./src/mixins/formFieldMixin.js","webpack://client/./src/components/BaseOrderForm.vue","webpack://client/./src/components/BaseOrderForm.vue?256b","webpack://client/./src/components/form/FormInput.vue","webpack://client/./src/components/form/FormInput.vue?fa38","webpack://client/./src/components/form/FormTextarea.vue","webpack://client/./src/components/form/FormTextarea.vue?7229","webpack://client/./src/components/order/OrderBasketItem.vue","webpack://client/./src/components/order/OrderBasketItem.vue?9c16"],"sourcesContent":["<template lang=\"\">\n  <!-- eslint-disable-next-line -->\n  <label class=\"form__label\">\n    <slot />\n    <span class=\"form__value\">{{ labelText }}</span>\n    <span v-if=\"errorText\" class=\"form__error\">{{ errorText }}</span>\n  </label>\n</template>\n<script>\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  props: ['labelText', 'errorText'],\n  setup() {\n    return {}\n  }\n})\n</script>\n<style lang=\"\"></style>\n","import { render } from \"./FormField.vue?vue&type=template&id=02766d95&lang=true\"\nimport script from \"./FormField.vue?vue&type=script&lang=js\"\nexport * from \"./FormField.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\USER\\\\Desktop\\\\Aurvedicum\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n/* eslint-disable */\nimport FormField from '@/components/form/FormField.vue';\n\nexport default {\n  props: ['placeholderText', 'modelValue', 'labelText', 'errorText'],\n  emits: ['update:modelValue'],\n  components: { FormField },\n  computed: {\n    value: {\n      get() {\n        return this.modelValue;\n      },\n      set(value) {\n        this.$emit('update:modelValue', value);\n        return value;\n      },\n    },\n  },\n\n};\n","<template>\r\n  <main class=\"content container\">\r\n    <section class=\"cart\">\r\n      <form\r\n        @submit.prevent=\"sendOrder\"\r\n        class=\"cart__form form\"\r\n        action=\"#\"\r\n        method=\"POST\"\r\n      >\r\n        <div class=\"cart__field\">\r\n          <div class=\"cart__data\">\r\n            <FormInput\r\n              v-model=\"formData.name\"\r\n              :placeholder-text=\"'Введите ваше полное имя'\"\r\n              :label-text=\"'ФИО *'\"\r\n              :error-text=\"error.name\"\r\n            />\r\n            <FormInput\r\n              v-model=\"formData.address\"\r\n              :placeholder-text=\"'Введите ваш адрес'\"\r\n              :label-text=\"'Адрес доставки *'\"\r\n              :error-text=\"error.address\"\r\n            />\r\n            <FormInput\r\n              v-model=\"formData.phone\"\r\n              :placeholder-text=\"'Введите ваш телефон'\"\r\n              :label-text=\"'Телефон *'\"\r\n              :error-text=\"error.phone\"\r\n            />\r\n            <FormInput\r\n              v-model=\"formData.email\"\r\n              :placeholder-text=\"'Введи ваш Email'\"\r\n              :label-text=\"'Email *'\"\r\n              :error-text=\"error.email\"\r\n            />\r\n            <FormTextarea\r\n              class=\"order__comment\"\r\n              v-model=\"formData.comment\"\r\n              :placeholder-text=\"'Ваши пожелания'\"\r\n              :label-text=\"'Комментарий к заказу'\"\r\n              :error-text=\"error.comment\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"cart__options\">\r\n            <h3 class=\"cart__title\">Доставка</h3>\r\n            <ul\r\n              class=\"cart__options options\"\r\n              :class=\"{ 'spinner-small': isDeliveryLoading }\"\r\n            >\r\n              <li\r\n                class=\"options__item\"\r\n                v-for=\"item in deliveries\"\r\n                :key=\"item.id\"\r\n              >\r\n                <label class=\"options__label\">\r\n                  <input\r\n                    class=\"options__radio sr-only\"\r\n                    type=\"radio\"\r\n                    name=\"delivery\"\r\n                    :value=\"item\"\r\n                    v-model=\"formData.delivery\"\r\n                  />\r\n                  <span class=\"options__value\">\r\n                    {{ item.title }}\r\n                    <b>{{ deliveryPriceText(computePrice(item.price)) }}</b>\r\n                  </span>\r\n                </label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"cart__block\" :class=\"{ indent: config.pages > 1 }\">\r\n          <PaginationBase\r\n            v-if=\"config.pages > 1\"\r\n            v-model:config=\"config\"\r\n            :pagination=\"config\"\r\n          ></PaginationBase>\r\n\r\n          <ul class=\"cart__orders\">\r\n            <OrderBasketItem\r\n              v-for=\"item in store.basketItems\"\r\n              :key=\"item.id\"\r\n              :item=\"item\"\r\n            ></OrderBasketItem>\r\n            <button\r\n              @click.prevent=\"$emit('change')\"\r\n              class=\"cart__change-button button--second button\"\r\n              :class=\"{ 'small-button-spinner': store.isChangeLoading }\"\r\n            >\r\n              Редактировать корзину\r\n            </button>\r\n          </ul>\r\n<span v-if=\"store.basketItems.length === 0\" >В корзине пусто</span>\r\n          <div v-else class=\"cart__total\">\r\n            <p>\r\n              Доставка: <b>{{ deliveryPriceText(formData.deliveryPrice) }} </b>\r\n            </p>\r\n            <p>\r\n              Итого: {{ pluralizeProductAmount(store.basketItemsQuantity) }} на\r\n              сумму\r\n              <b>{{ editNumberFormat(price) }}&nbsp;₽</b>\r\n            </p>\r\n          </div>\r\n\r\n          <button\r\n            v-if=\"store.basketItems.length > 0\"\r\n            class=\"cart__button button button--primery\"\r\n            :class=\"{\r\n              'spinner-button-small': store.isOrderLoading\r\n            }\"\r\n            type=\"submit\"\r\n          >\r\n            {{ primeBtnText }}\r\n          </button>\r\n        </div>\r\n        <div\r\n          v-if=\"Object.keys(error).length > 0\"\r\n          class=\"cart__error form__error-block\"\r\n        >\r\n          <h4>Заказ не отправлен!</h4>\r\n          <p>Заполните все необходимые поля и попробуйте еще раз.</p>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, watch, defineProps, defineEmits } from 'vue'\r\nimport OrderBasketItem from '@/components/order/OrderBasketItem.vue'\r\nimport PaginationBase from '@/components/small/PaginationBase.vue'\r\nimport FormTextarea from '@/components/form/FormTextarea.vue'\r\nimport FormInput from '@/components/form/FormInput.vue'\r\nimport useEditors from '@/hooks/useEditors'\r\nimport useApi from '@/hooks/useApi'\r\nimport { store } from '@/store/store'\r\nconst props = defineProps(['data', 'error', 'primeBtnText'])\r\nconst emit = defineEmits(['update:data', 'change'])\r\n\r\nconst formData = computed({\r\n  get() {\r\n    return props.data\r\n  },\r\n  set(value) {\r\n    emit('update:data', value)\r\n  }\r\n})\r\n\r\nconst { pluralizeProductAmount, editNumberFormat, deliveryPriceText } =\r\n  useEditors()\r\nconst { getDeliveries } = useApi()\r\nconst deliveries = ref([])\r\nconst isDeliveryLoading = ref(true)\r\n\r\ngetDeliveries().then((res) => {\r\n  deliveries.value = res.data.items\r\n  isDeliveryLoading.value = false\r\n})\r\n\r\nconst findCurrentPrice = (arr) =>\r\n  arr.find(\r\n    (item) =>\r\n      (!item.min || item.min <= store.basketTotalPrice) &&\r\n      (!item.max || item.max >= store.basketTotalPrice)\r\n  ).value\r\n\r\nconst computePrice = (arr) => {\r\n  return findCurrentPrice(arr)\r\n}\r\n\r\nwatch(\r\n  () => formData.value.delivery,\r\n  (value) => {\r\n    if (value.price) {\r\n      formData.value.deliveryPrice = findCurrentPrice(value.price)\r\n      return\r\n    }\r\n\r\n    formData.value.deliveryPrice = 0\r\n  },\r\n  { deep: true }\r\n)\r\nconst config = ref({ limit: 5, page: 1, pages: 1 })\r\n\r\nconst price = computed(() => {\r\n  const value = store.basketTotalPrice + formData.value.deliveryPrice\r\n  return value\r\n})\r\n\r\nwatch(\r\n  () => price.value,\r\n  (value) => (formData.value.price = value)\r\n)\r\n</script>\r\n<style lang=\"scss\">\r\n@import '@/styles/order.scss';\r\n</style>\r\n","import script from \"./BaseOrderForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BaseOrderForm.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BaseOrderForm.vue?vue&type=style&index=0&id=da64b142&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template lang=\"\">\n  <FormField :label-text=\"labelText\" :error-text=\"errorValue\">\n    <!-- eslint-disable-next-line -->\n    <input\n      @input=\"updateErrorStatus\"\n      class=\"form__input\"\n      v-model=\"value\"\n      :type=\"placeholderText.includes('телефон') ? 'tel' : 'text'\"\n      :placeholder=\"placeholderText\"\n    />\n  </FormField>\n</template>\n<script>\nimport formFieldMixin from '@/mixins/formFieldMixin'\nimport { defineComponent, ref, watch } from 'vue'\n\nexport default defineComponent({\n  mixins: [formFieldMixin],\n  setup(props) {\n    const errorValue = ref()\n\n    const updateErrorStatus = (e) => {\n      errorValue.value = !e.target.value.trim() ? props.errorText : null\n    }\n\n    watch(\n      () => props.errorText,\n      (value) => {\n        errorValue.value = value\n      }\n    )\n\n    return {\n      errorValue,\n      updateErrorStatus\n    }\n  }\n})\n</script>\n<style>\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  /* display: none; <- Crashes Chrome on hover */\n  -webkit-appearance: none;\n  margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n}\n</style>\n","import { render } from \"./FormInput.vue?vue&type=template&id=56dd0c04&lang=true\"\nimport script from \"./FormInput.vue?vue&type=script&lang=js\"\nexport * from \"./FormInput.vue?vue&type=script&lang=js\"\n\nimport \"./FormInput.vue?vue&type=style&index=0&id=56dd0c04&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\USER\\\\Desktop\\\\Aurvedicum\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <FormField :label-text=\"labelText\" :error-text=\"errorValue\">\n    <!-- eslint-disable-next-line -->\n    <textarea\n      @input=\"updateErrorStatus\"\n      class=\"form__input form__input--area\"\n      v-model=\"value\"\n      :placeholder=\"placeholderText\"\n    ></textarea>\n  </FormField>\n</template>\n<script>\nimport formFieldMixin from '@/mixins/formFieldMixin'\nimport { defineComponent, ref, watch } from 'vue'\n\nexport default defineComponent({\n  mixins: [formFieldMixin],\n  setup(props) {\n    const errorValue = ref()\n\n    const updateErrorStatus = (e) => {\n      errorValue.value = !e.target.value.trim() ? props.errorText : null\n    }\n\n    watch(\n      () => props.errorText,\n      (value) => {\n        errorValue.value = value\n      }\n    )\n    return {\n      updateErrorStatus,\n      errorValue\n    }\n  }\n})\n</script>\n<style lang=\"scss\">\n.form__input--area {\n  resize: vertical;\n  overflow: auto;\n  padding: 13px 30px 13px 20px;\n}\n</style>\n","import { render } from \"./FormTextarea.vue?vue&type=template&id=7d256f63\"\nimport script from \"./FormTextarea.vue?vue&type=script&lang=js\"\nexport * from \"./FormTextarea.vue?vue&type=script&lang=js\"\n\nimport \"./FormTextarea.vue?vue&type=style&index=0&id=7d256f63&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\USER\\\\Desktop\\\\Aurvedicum\\\\client\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <li\r\n    class=\"cart__order\"\r\n    :class=\"{ 'spinner-small': isLoading, 'loading-error': isLoadingFailed }\"\r\n  >\r\n    <h3>{{ product.name }}</h3>\r\n    <b>{{ editNumberFormat(item.price) }}&nbsp;₽</b>\r\n    <span>Объем/вес:&nbsp; {{ volume }}</span>\r\n    <span\r\n      >Колличество:&nbsp;{{ editNumberFormat(item.quantity) }}&nbsp;шт.</span\r\n    >\r\n  </li>\r\n</template>\r\n<script setup>\r\nimport { ref, defineProps, computed } from 'vue'\r\nimport useEditors from '@/hooks/useEditors'\r\nimport useApi from '@/hooks/useApi'\r\nconst { getProduct } = useApi()\r\nconst props = defineProps(['item'])\r\nconst product = ref({})\r\nconst { editVolumeFormat, editNumberFormat } = useEditors()\r\nconst isLoading = ref(true)\r\nconst isLoadingFailed = ref(false)\r\ngetProduct({ id: props.item.productId })\r\n  .then((res) => {\r\n    product.value = res.data\r\n  })\r\n  .catch(() => (isLoadingFailed.value = true))\r\n  .then(() => (isLoading.value = false))\r\n\r\nconst volume = computed(() => {\r\n  if (product.value.volumes) {\r\n    return editVolumeFormat(\r\n      product.value.volumes.find((item) => item.id === props.item.volumeId)\r\n        .volume\r\n    )\r\n  } else {\r\n    return ''\r\n  }\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n@import '@/styles/style.scss';\r\n.spinner-small::after {\r\n  @include basketItemSpinner;\r\n}\r\n</style>\r\n","import script from \"./OrderBasketItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OrderBasketItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./OrderBasketItem.vue?vue&type=style&index=0&id=977938b2&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementBlock","_renderSlot","_ctx","_createElementVNode","_toDisplayString","defineComponent","props","setup","__exports__","render","emits","components","FormField","computed","value","get","this","modelValue","set","$emit","formData","data","emit","pluralizeProductAmount","editNumberFormat","deliveryPriceText","useEditors","getDeliveries","useApi","deliveries","ref","isDeliveryLoading","then","res","items","findCurrentPrice","arr","find","item","min","store","max","computePrice","watch","delivery","price","deliveryPrice","deep","config","limit","page","pages","_createBlock","_component_FormField","onInput","$event","type","includes","placeholder","mixins","formFieldMixin","errorValue","updateErrorStatus","e","target","trim","errorText","getProduct","product","editVolumeFormat","isLoading","isLoadingFailed","id","productId","catch","volume","volumes","volumeId"],"sourceRoot":""}